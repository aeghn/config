#!/usr/bin/env bash


can_handle() {
    [[ "$FILEPATH" =~ "$1" ]] && return 0 || return 122
}

dfs_home_dotsciprts() {
    # We check if this function could handle the path.
    can_handle "$HOME/.scripts/" || return 122

    local filename="${FILEPATH##*/}"
    local island_file="${CONFIG_ISLAND_DIR%/}/scripts/$filename"
    dfm -i "$island_file" -m "$FILEPATH"
}

dfs_home_dotconfig() {
    can_handle "$HOME/.config/" || return 122

    local filename _dir _island
    filename="${FILEPATH%/}"
    filename="${filename##*/}"

    # check if just regular file in ~/.config
    if [ "_$HOME/.config/$filename" = "_$FILEPATH" ] && [ -f "${FILEPATH}" ]; then
        read _dir
        _island="/${_dir#/}/$filename"
    else
        _island="/${FILEPATH#$HOME/.config/}"
    fi

    local dfs_file="${CONFIG_ISLAND_DIR%/}/${_island%/*}/.dfs"
    local island_file="${CONFIG_ISLAND_DIR%/}/$_island"
    dfm -i "$island_file" -m "$FILEPATH" -f "$dfs_file"
}

dfs_home_font() {
    local prefix prefix1 prefix2
    prefix1="$HOME/.local/share/fonts/"
    prefix2="/usr/share/fonts/"

    if can_handle "$prefix1"; then
        prefix="$prefix1"
    elif can_handle "$prefix2"; then
        prefix="$prefix2"
    else
        return 122
    fi

    _island="${FILEPATH#$prefix}"

    local island_file="${CONFIG_ISLAND_DIR%/}/fonts/$_island"
    dfm "$island_file" "$FILEPATH" --so

    dfm -i "$island_file" -m "$prefix1/$_island"
}


fullpath() {
    awk -v target="$1" -v pwd="$PWD" 'BEGIN { t=target;c=pwd;if(substr(t,1,1)!="/"){t=c"/"t;}gsub("/\\.?/","/",t);while(match(t,"/[^./]+/\\.\\./")){t=substr(t,1,RSTART-1)"/"substr(t,RSTART+RLENGTH);}print t; }'
}


for i in "$@"; do
    FILEPATH="$(fullpath "$i")"

    CONFIG_ISLAND_DIR="$HOME/files/config"
    echo "=> FILEPATH: $FILEPATH"
    for func in $(compgen -A function); do
        if [[ ! "$func" =~ dfs_.* ]]; then
            continue
        fi
        eval "$func"
        exit_status="$?"
        if [ "_$exit_status" = _122 ]; then
            continue
        elif [ "_$exit_status" != _0 ]; then
            echo "unknown exit status: $exit_status"
            exit 1
        fi
    done
    echo "===="
done
