#!/usr/bin/env bash

# Use ffmpeg to compress videos;
# For windows, download bin from https://www.gyan.dev/ffmpeg/builds/, **FULL** version;

gpu() {
    local input_file="$1"
    local output_file="$2"

    # Check if input and output files are the same
    if [ "$input_file" = "$output_file" ]; then
        echo "Source and output files are the same."
        exit 1
    fi

    echo "=================== " ffmpeg -i "$input_file" -vcodec h264_nvenc -crf 18 -c:a copy "${ffmpeg_args[@]}" "$output_file"
    ffmpeg -i "$input_file" -vcodec h264_nvenc -crf 18 -c:a copy "${ffmpeg_args[@]}" "$output_file"
    echo "=================== "
}

INPUT_FILE=""
OUTPUT_FILE=""

while [[ "$#" -gt 0 ]]; do
    case $1 in
        -i) INPUT_FILE="$2"; shift ;;
        -o) OUTPUT_FILE="$2"; shift ;;
        *) ffmpeg_args+=("$1") ;;  # Collect any other ffmpeg arguments
    esac
    shift
done

# Check if input file is provided
if [ x = "x$INPUT_FILE" ]; then
    echo "Input file not provided. Use -i to specify the input."
    exit 1
fi

# Set default output file if not provided
if [ -z "$OUTPUT_FILE" ]; then
    OUTPUT_FILE="${INPUT_FILE%.*}_out.${INPUT_FILE##*.}"
fi

echo "in: $INPUT_FILE"
echo "OUT: $OUTPUT_FILE"
gpu "$INPUT_FILE" "$OUTPUT_FILE"
